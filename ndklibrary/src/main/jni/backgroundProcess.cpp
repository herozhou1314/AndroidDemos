/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_hero_org_util_BackgroundProcess */
#include "backgroundProcess.h"
#include "string.h"
#include "LogCat.h"
char* jstringTostring(JNIEnv* env, jstring jstr) {
	char* rtn = NULL;
	jclass clsstring = env->FindClass("java/lang/String");
	jstring strencode = env->NewStringUTF("utf-8");
	jmethodID mid = env->GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B");
	jbyteArray barr = (jbyteArray) env->CallObjectMethod(jstr, mid, strencode);
	jsize alen = env->GetArrayLength(barr);
	jbyte* ba = env->GetByteArrayElements(barr, JNI_FALSE);
	if (alen > 0) {
		rtn = (char*) malloc(alen + 1);
		memcpy(rtn, ba, alen);
		rtn[alen] = 0;
	}
	env->ReleaseByteArrayElements(barr, ba, 0);
	return rtn;
}
//char* to jstring
jstring stoJstring(JNIEnv* env, const char* pat) {
	jclass strClass = env->FindClass("Ljava/lang/String;");
	jmethodID ctorID = env->GetMethodID(strClass, "<init>", "([BLjava/lang/String;)V");
	jbyteArray bytes = env->NewByteArray(strlen(pat));
	env->SetByteArrayRegion(bytes, 0, strlen(pat), (jbyte*) pat);
	jstring encoding = env->NewStringUTF("utf-8");
	return (jstring) env->NewObject(strClass, ctorID, bytes, encoding);
}
/*
 * Class:     com_hero_org_util_BackgroundProcess
 * Method:    checkValid
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_hero_org_util_BackgroundProcess_checkValid(JNIEnv *env, jobject obj) {
	jclass bgpClass = env->GetObjectClass(obj);
	jmethodID methodId = env->GetMethodID(bgpClass, "backProcess", "(Ljava/util/ArrayList;)Ljava/lang/String;");
	jobject str = env->CallObjectMethod(obj, methodId, NULL);
	jfieldID fieldId = env->GetFieldID(bgpClass, "num", "I");
	jint number = env->GetIntField(obj, fieldId);
	LOGE("number 值是:: %d", number);
	env->SetIntField(obj, fieldId, 100L);
	return 1;
}
/*
 * Method: processData
 * Signature: (Lcom/hero/org/util/BackgroundProcess;)V
 */
JNIEXPORT void JNICALL Java_com_hero_org_util_BackgroundProcess_processData(JNIEnv *env, jobject, jobject) {
	//cout<< "this function do nothing " << endl;
	LOGE("this function do nothing");
}
/*
 * Class:     com_hero_org_util_BackgroundProcess
 * Method:    processGarbage
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_hero_org_util_BackgroundProcess_processGarbage(JNIEnv *env, jobject jobj, jobjectArray array) {
	jint size=env->GetArrayLength(array);
	LOGE("数组大小是: %d--", size);
	jstring tempObj=NULL;
	char *pszSTR1 = NULL;
	for(int i=0;i<size;i++) {
		LOGE("current value is :: %d--", size);
		tempObj=(jstring)env->GetObjectArrayElement(array,i);
		const char * chars =env->GetStringUTFChars(tempObj, 0);
		LOGE("current value is :: %s--", chars);
	}
}

